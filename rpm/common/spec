%define _build_id_links none
Name:		%{_name}
Version:	%{_version}
Release:	1%{?dist}
Summary:	%{_summary}
Group:		Unspecified
License:	%{_license}
URL:		%{_www}	
Source0:	%{name}-%{_version}.tar.gz
Source1:        %{name}.firewalld
Source2:	override.config
Source3:	description
Source4:	selinux.te
Source5:	selinux.fc
BuildRoot:	%{_topdir}/BUILD/
BuildRequires:	systemd-units
BuildRequires:	make
BuildRequires:	selinux-policy-devel
Requires:	systemd firewalld-filesystem
Requires(post):	firewalld-filesystem
Requires(pre):	shadow-utils
Requires: selinux-policy >= %{selinux_policyver}
Requires(post): selinux-policy-base >= %{selinux_policyver}
Requires(post): libselinux-utils

%global selinuxtype targeted
%global selinux_policyver 3.14.2
%global moduletype contrib
%global modulename %name

%description
%(cat %SOURCE3)

%prep
sed -e 's:XXX-NAME-XXX:%{name}:g' %{S:4} > %{name}.te
sed -e 's:XXX-NAME-XXX:%{name}:g' %{S:5} > %{name}.fc

%build
make NAME=%{name} -f /usr/share/selinux/devel/Makefile
bzip2 %{name}.pp

%install
[ "%{buildroot}" != "/" ] && %{__rm} -rf %{buildroot}

mkdir -p %{buildroot}/%{_libdir}/%{name}
tar -x -f %{SOURCE0} -C %{buildroot}/%{_libdir}/%{name}

mkdir -p %{buildroot}/%{_libdir}/%{name}/bin
cat > %{buildroot}/%{_libdir}/%{name}/bin/%{name} <<-EOF
#!/bin/sh -e
bn=\$(basename \$0)
. %{_sysconfdir}/sysconfig/%{name}.d/env
. %{_sysconfdir}/sysconfig/%{name}.d/name
export BINDIR EMU ROOTDIR ERL_EPMD_ADDRESS NAME
CMD="\$BINDIR/erlexec -boot \$ROOTDIR/releases/\$VSN/start_clean -mode interactive -name \$\$-\$NAME -setcookie \$COOKIE -hidden"

case "\$1" in
  remsh)
    printf '\n\n\tCTRL-C twice to detach\n\n'
    exec \$CMD -remsh \$NAME
    ;;
  stop)
    exec \$CMD -noinput -noshell -eval 'io:format("~p~n",[rpc:call(list_to_atom(os:getenv("NAME")),init,stop,[])]),init:stop().'
    ;;
  ping)
    exec \$CMD -noinput -noshell -eval 'io:format("~p~n",[net_adm:ping(list_to_atom(os:getenv("NAME")))]),init:stop().'
    ;;
  *)
    printf 'usage: %s remsh|ping|stop\n' "\$bn" >&2
    exit 1
esac
EOF
chmod a+x %{buildroot}/%{_libdir}/%{name}/bin/%{name}


mkdir -p %{buildroot}/%{_unitdir}
cat > %{buildroot}/%{_unitdir}/%{name}.service <<-EOF
[Unit]
Description=%{summary}
After=network-online.target

[Service]
User=%{name}
Group=%{name}
EnvironmentFile=-%{_sysconfdir}/sysconfig/%{name}.d/env
EnvironmentFile=-%{_sysconfdir}/sysconfig/%{name}.d/name
ExecStart=%{_libdir}/%{name}/erts-%{_erts_version}/bin/erlexec -boot \${ROOTDIR}/releases/\${VSN}/start -config \${ROOTDIR}/releases/\${VSN}/sys.config -args_file \${ROOTDIR}/releases/\${VSN}/vm.args -setcookie \${COOKIE} -name \${NAME}
ExecStop=/bin/kill \$MAINPID

[Install]
WantedBy=multi-user.target
EOF
chmod 0644 %{buildroot}/%{_unitdir}/%{name}.service

mkdir -p  %{buildroot}/%{_sysconfdir}/sysconfig/%{name}.d
cat > %{buildroot}/%{_sysconfdir}/sysconfig/%{name}.d/env <<-EOF
BINDIR=%{_libdir}/%{name}/erts-%{_erts_version}/bin
EMU=beam
ROOTDIR=%{_libdir}/%{name}
VSN=%{_version}
PROGNAME=%{name}
ERL_EPMD_ADDRESS=127.0.0.1
COOKIE=%{name}
EOF

cat > %{buildroot}/%{_sysconfdir}/sysconfig/%{name}.d/name <<-EOF
NAME=%{name}@localhost.localdomain
EOF

cp %{SOURCE2} %{buildroot}/%{_sysconfdir}/sysconfig/%{name}.d/override.config
mkdir -p %{buildroot}/%{_prefix}/lib/firewalld/services
cp %{SOURCE1} %{buildroot}/%{_prefix}/lib/firewalld/services/%{name}.xml

# Install the SELinux policy
install -d %{buildroot}%{_datadir}/selinux/packages
install -d -p %{buildroot}%{_datadir}/selinux/devel/include/%{moduletype}
 
install -p -m 0644 %{name}.if %{buildroot}%{_datadir}/selinux/devel/include/%{moduletype}
install -p -m 0644 %{name}.pp.bz2 %{buildroot}%{_datadir}/selinux/packages

%post
mkdir -p %{_localstatedir}/log/%{name}
chown %{name}:%{name} %{_localstatedir}/log/%{name}
%systemd_post %{name}.service
%firewalld_reload
%selinux_modules_install -s %{selinuxtype} %{_datadir}/selinux/packages/%{modulename}.pp.bz2

%posttrans
/usr/sbin/restorecon -i -R /var/log/%{name}/
/usr/sbin/restorecon -i -R %{_libdir}/%{name}/
%selinux_relabel_post -s %{selinuxtype}




%preun
%systemd_preun %{name}.service

%postun
%firewalld_reload
%systemd_postun_with_restart %{name}.service
%selinux_modules_uninstall -s %{selinuxtype} %{modulename}


%clean
[ "%{buildroot}" != "/" ] && %{__rm} -rf %{buildroot}

%pre
getent group %{name} >/dev/null || groupadd -r %{name}
getent passwd %{name} >/dev/null || \
	useradd -r -g %{name} -d %{_localstatedir}/lib/%{name} -s /sbin/nologin \
	-c "%{summary}" %{name}
%selinux_relabel_pre -s %{selinuxtype}


%files
%{_libdir}/%{name}
%{_unitdir}/%{name}.service
%config(noreplace) %{_sysconfdir}/sysconfig/%{name}.d/env
%config(noreplace) %{_sysconfdir}/sysconfig/%{name}.d/name
%{_prefix}/lib/firewalld/services/%{name}.xml
%config(noreplace) %{_sysconfdir}/sysconfig/%{name}.d/override.config
%{_datadir}/selinux/devel/include/%{moduletype}/%{name}.if
%{_datadir}/selinux/packages/%{name}.pp.bz2

%changelog
* %{_commit_timestamp} XXX need Changelog automation XXX - %{version}
- initial
